---
description: SCSS 样式开发规则 - 优先使用uni.scss预定义样式
globs: *.scss,*.vue
alwaysApply: false
---
# SCSS 样式规则

## 强制使用SCSS
- **强制要求**：项目中只使用SCSS预处理器，不使用CSS或Less.
- **语法要求**：在Vue组件中使用 `<style lang="scss" scoped>`.
- **文件扩展名**：独立样式文件使用.scss扩展名.

## uni.scss 预定义样式优先

### 1. 颜色变量 (优先使用)
```scss
// 主要颜色 - 直接使用uni.scss变量
$uni-color-primary: #007aff;     // 主色调
$uni-color-success: #4cd964;     // 成功色
$uni-color-warning: #f0ad4e;     // 警告色
$uni-color-error: #dd524d;       // 错误色

// 文字颜色
$uni-text-color: #333;           // 主文字色
$uni-text-color-grey: #999;      // 次要文字色
$uni-text-color-placeholder: #ddd; // 占位文字色

// 背景颜色
$uni-bg-color: #ffffff;          // 背景色
$uni-bg-color-grey: #f8f8f8;     // 灰色背景
$uni-bg-color-hover: #f1f1f1;    // 点击背景色
$uni-bg-color-mask: rgba(0, 0, 0, 0.4); // 遮罩背景
```

### 2. 尺寸变量 (优先使用)
```scss
// 边距
$uni-spacing-row-sm: 5px;        // 小间距
$uni-spacing-row-base: 10px;     // 基础间距
$uni-spacing-row-lg: 15px;       // 大间距

// 边框
$uni-border-1: 1px solid #dcdfe6;  // 标准边框
$uni-border-radius-sm: 2px;        // 小圆角
$uni-border-radius-base: 3px;      // 基础圆角
$uni-border-radius-lg: 6px;        // 大圆角
$uni-border-radius-circle: 50%;    // 圆形

// 字体大小
$uni-font-size-sm: 12px;         // 小字体
$uni-font-size-base: 14px;       // 基础字体
$uni-font-size-lg: 16px;         // 大字体
```

### 3. 预定义CSS类 (优先使用)
```scss
// 布局类 - 直接使用类名
.uni-flex              // display: flex
.uni-flex-item         // flex: 1
.uni-row               // 行布局
.uni-column            // 列布局

// 文字类
.uni-center            // text-align: center
.uni-ellipsis          // 单行省略
.uni-ellipsis-2        // 两行省略

// 颜色类
.uni-primary           // 主色调文字
.uni-success           // 成功色文字
.uni-warning           // 警告色文字
.uni-error             // 错误色文字

// 间距类
.uni-padding-wrap      // 标准内边距
.uni-margin-wrap       // 标准外边距
```

## 样式编写最佳实践

### 1. 组件样式结构
```scss
<style lang="scss" scoped>
// 1. 导入uni.scss变量
@import '@/uni.scss';

// 2. 使用预定义变量，避免硬编码
.custom-container {
  background-color: $uni-bg-color;
  padding: $uni-spacing-row-base;
  border-radius: $uni-border-radius-base;
  border: $uni-border-1;
}

// 3. 文字样式使用预定义变量
.custom-title {
  color: $uni-text-color;
  font-size: $uni-font-size-lg;
  
  &.disabled {
    color: $uni-text-color-grey;
  }
}

// 4. 响应式使用rpx，但优先考虑预定义间距
.custom-layout {
  margin: $uni-spacing-row-base; // 优先使用预定义
  // width: 750rpx; // 必要时才使用rpx
}
</style>
```

### 2. 减少手写样式的策略
```scss
// ❌ 避免 - 手写重复样式
.my-button {
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: #007aff;
  color: #ffffff;
  border-radius: 3px;
  padding: 10px;
}

// ✅ 推荐 - 使用预定义样式
.my-button {
  @extend .uni-flex;
  @extend .uni-center;
  background-color: $uni-color-primary;
  color: #ffffff;
  border-radius: $uni-border-radius-base;
  padding: $uni-spacing-row-base;
}

// ✅ 更推荐 - 直接使用CSS类
<view class="uni-flex uni-center my-button">按钮</view>
```

### 3. 主题定制
```scss
// 在uni.scss中定制主题变量
$uni-color-primary: #1890ff;     // 自定义主色调
$uni-color-success: #52c41a;     // 自定义成功色

// 组件中直接使用，无需重复定义
.theme-button {
  background-color: $uni-color-primary;
  
  &:hover {
    background-color: darken($uni-color-primary, 10%);
  }
}
```

## 响应式设计

### 1. 单位使用优先级
```scss
// 1. 优先使用预定义变量
padding: $uni-spacing-row-base;

// 2. 固定尺寸使用px
border-width: 1px;
font-size: 14px;

// 3. 响应式才使用rpx
width: 750rpx; // 仅在需要响应式时使用
height: 300rpx;

// 4. 相对布局使用%
width: 100%;
height: 50%;
```

### 2. 断点管理
```scss
// 定义响应式断点混入
@mixin mobile {
  @media screen and (max-width: 768px) {
    @content;
  }
}

@mixin tablet {
  @media screen and (min-width: 769px) and (max-width: 1024px) {
    @content;
  }
}

// 使用混入而不是硬编码媒体查询
.responsive-container {
  padding: $uni-spacing-row-lg;
  
  @include mobile {
    padding: $uni-spacing-row-sm;
  }
}
```

## 性能优化

### 1. 避免深层嵌套
```scss
// ❌ 避免 - 深层嵌套
.page {
  .container {
    .header {
      .title {
        .text {
          color: $uni-text-color;
        }
      }
    }
  }
}

// ✅ 推荐 - 扁平化类名
.page-header-title {
  color: $uni-text-color;
}
```

### 2. 利用SCSS功能减少代码
```scss
// 使用混入复用样式
@mixin button-base {
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: $uni-border-radius-base;
  padding: $uni-spacing-row-base;
}

.primary-button {
  @include button-base;
  background-color: $uni-color-primary;
  color: #ffffff;
}

.success-button {
  @include button-base;
  background-color: $uni-color-success;
  color: #ffffff;
}
```

## 平台兼容性

### 1. 条件编译样式
```scss
.platform-specific {
  /* #ifdef H5 */
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  /* #endif */
  
  /* #ifdef MP-WEIXIN */
  border: $uni-border-1;
  /* #endif */
  
  background-color: $uni-bg-color;
}
```

### 2. 安全的样式选择器
```scss
// ✅ 推荐 - 简单选择器
.item-title {
  color: $uni-text-color;
}

// ❌ 避免 - 复杂选择器（小程序不支持）
.container > .item:nth-child(2n+1) {
  color: $uni-text-color;
}
```